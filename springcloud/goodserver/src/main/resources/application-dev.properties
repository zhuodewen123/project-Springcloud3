#oracle\u6570\u636E\u5E93\u914D\u7F6E
spring.dataSource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.dataSource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
spring.dataSource.username=myproject
spring.dataSource.password=zdw123


#Spring Data JPA\u914D\u7F6E(\u914D\u7F6EHibernate)
#spring.jpa.database=oracle
#spring.jpa.show-sql=true
# \u5B9A\u4E49HibernateO/R\u6620\u5C04\u5B57\u6BB5\u7684\u547D\u540D\u7B56\u7565
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# \u5B9A\u4E49Hibernate\u7684\u6570\u636E\u5E93\u65B9\u8A00
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#\u5B9A\u4E49Hibernate\u548C\u5E93\u8868\u7684\u6620\u5C04\u65B9\u5F0F
#spring.jpa.hibernate.ddl-auto=update
#[a]create:\u6BCF\u6B21\u52A0\u8F7Dhibernate\u65F6\u90FD\u4F1A\u5220\u9664\u4E0A\u4E00\u6B21\u7684\u751F\u6210\u7684\u8868,\u7136\u540E\u6839\u636E\u4F60\u7684model\u7C7B\u518D\u91CD\u65B0\u6765\u751F\u6210\u65B0\u8868;
#[b]create-drop:\u6BCF\u6B21\u52A0\u8F7Dhibernate\u65F6\u6839\u636Emodel\u7C7B\u751F\u6210\u8868,\u4F46\u662FsessionFactory\u4E00\u5173\u95ED,\u8868\u5C31\u81EA\u52A8\u5220\u9664;
#[c]validate:\u6BCF\u6B21\u52A0\u8F7Dhibernate\u65F6,\u9A8C\u8BC1\u521B\u5EFA\u6570\u636E\u5E93\u8868\u7ED3\u6784,\u53EA\u4F1A\u548C\u6570\u636E\u5E93\u4E2D\u7684\u8868\u8FDB\u884C\u6BD4\u8F83,\u4E0D\u4F1A\u521B\u5EFA\u65B0\u8868,\u4F46\u662F\u4F1A\u63D2\u5165\u65B0\u503C;
#[d]update:\u5E38\u7528,\u7B2C\u4E00\u6B21\u52A0\u8F7Dhibernate\u65F6\u6839\u636Emodel\u7C7B\u4F1A\u81EA\u52A8\u5EFA\u7ACB\u8D77\u8868\u7684\u7ED3\u6784,\u4EE5\u540E\u52A0\u8F7Dhibernate\u65F6\u6839\u636E model\u7C7B\u81EA\u52A8\u66F4\u65B0\u8868\u7ED3\u6784;


#springcloud\u914D\u7F6E
#\u6CE8\u518C\u4E2D\u5FC3\u7684\u5730\u5740
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka
#\u6CE8\u518C\u670D\u52A1\u65F6\u7684\u5E94\u7528\u540D
spring.application.name=eureka-good
#\u4E3Atrue\u542F\u52A8\u65F6\u62A5\u8B66
eureka.client.fetchRegistry=true
#\u662F\u5426\u5C06\u81EA\u8EAB\u6CE8\u518C,false\u8868\u793A\u4E3A\u6CE8\u518C\u4E2D\u5FC3
eureka.client.registerWithEureka=true
#\u5F3A\u5236\u6307\u5B9Aip\u8FDB\u884C\u670D\u52A1\u6CE8\u518C(\u9ED8\u8BA4\u672C\u673Aip)
#eureka.instance.ip-address=ip:port
#\u662F\u5426\u4F7F\u7528ip\u6CE8\u518C\u5230\u670D\u52A1\u4E2D\u5FC3(\u9ED8\u8BA4\u4E3B\u673A\u540D)
eureka.instance.prefer-ip-address=true
#\u6CE8\u610F:eureka.instance.ip-address=ip:port\u8868\u793A\u624B\u52A8\u83B7\u53D6ip\u5730\u5740,eureka.instance.prefer-ip-address=true\u8868\u793A\u81EA\u52A8\u83B7\u53D6ip\u5730\u5740
#\u5F53\u8BBE\u7F6Eprefer-ip-address=true\u4E14\u914D\u7F6E\u4E86instance-id\u65F6,\u9ED8\u8BA4\u4F7F\u7528\u524D\u8005,\u5373eureka.instance.ip-address=ip+port
#\u8BBE\u7F6E\u6CE8\u518C\u5230\u670D\u52A1\u4E2D\u5FC3\u7684ip
eureka.instance.instance-id=localhost:8080
#\u5BA2\u6237\u7AEF\u62C9\u53D6\u670D\u52A1\u6CE8\u518C\u4FE1\u606F\u7684\u95F4\u9694,\u9ED8\u8BA490\u79D2
#eureka.instance.registryFetchIntervalSeconds=30
#\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u5FC3\u8DF3\u9891\u7387,\u9ED8\u8BA430\u79D2
#eureka.instance.leaseRenewalIntervalInSeconds=3
#\u63A5\u6536\u5FC3\u8DF3\u7684\u7B49\u5F85\u65F6\u95F4,\u9ED8\u8BA490\u79D2
#eureka.instance.leaseExpirationDurationInSeconds=5

#\u6253\u5F00\u7194\u65AD\u5668
feign.hystrix.enabled=true
#\u8BBE\u7F6E\u7194\u65AD\u5668\u7684\u8D85\u65F6\u65F6\u95F4(\u5355\u4F4D:\u6BEB\u79D2)
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000
#\u7EBF\u7A0B\u6570
hystrix.threadpool.default.coreSize=500

#RabbitMQ\u914D\u7F6E
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=15672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

##Kafka\u914D\u7F6E(mq\u548Ckafka\u53EA\u7528\u4E00\u4E2A\u5373\u53EF,\u5C06\u53E6\u4E00\u4E2A\u6CE8\u91CA\u6389)
##kafka\u670D\u52A1\u5730\u5740\u548C\u7AEF\u53E3(kafka\u9ED8\u8BA49092)
#spring.cloud.stream.kafka.binder.brokers=127.0.0.1:9092
##ZK\u7684\u96C6\u7FA4\u914D\u7F6E\u5730\u5740\u548C\u7AEF\u53E3(zk\u9ED8\u8BA42181)
#spring.cloud.stream.kafka.binder.zk-nodes=127.0.0.1:2181
#spring.cloud.stream.kafka.binder.auto-add-partitions=true
#spring.cloud.stream.kafka.binder.auto-create-topics=true
#spring.cloud.stream.kafka.binder.min-partition-count=1
##topic\u540D\u79F0,\u6D88\u8D39\u7AEF\u9700\u8DDF\u53D1\u9001\u7AEF\u4FDD\u6301\u4E00\u81F4
#spring.cloud.stream.bindings.member.destination=mytopic
##\u52A0\u4E0A\u5C31\u80FD\u63A5\u6536\u5230\u4E4B\u524D\u53D1\u9001\u6CA1\u63A5\u6536\u5230\u7684\u6D88\u606F
#spring.cloud.stream.bindings.member.producer.partitionCount=1

# \u6587\u4EF6\u4E0A\u4F20\u8DEF\u5F84(\u6D4B\u8BD5\u73AF\u5883)--@value("${uploadpath}") \u53D6\u503C
uploadpath=D:/imgs/upload